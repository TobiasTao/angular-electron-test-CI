name: Build/release

on:
  push:

jobs:
  build_windows:
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Build app on Windows
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: |
          npm install
          npm run electron:windows

      - name: Package artifacts
        run: |
          mkdir artifact-setup
          mv release/*-setup.exe* artifact-setup/

      - uses: actions/upload-artifact@master
        name: Upload installer
        with:
          name: Windows
          path: artifact-setup


  build_linux:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Build app on Linux
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: |
          npm install
          npm run electron:linux

      - name: Package artifacts
        run: |
          mkdir artifact-linux
          mv release/*.deb artifact-linux/ || true
          mv release/*.rpm artifact-linux/ || true
          mv release/*.snap artifact-linux/ || true
          mv release/*.tar.gz artifact-linux.gz/ || true

      - uses: actions/upload-artifact@master
        name: Upload linux artifacts
        with:
          name: Linux
          path: artifact-linux


  build_macos:
    runs-on: macOS-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Build app on macOS
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: |
          npm install
          npm run electron:mac

      - name: Package artifacts
        run: |
          mkdir artifact-macos
          mv release/*.pkg artifact-macos/
          mv release/*.dmg artifact-macos/

      - uses: actions/upload-artifact@master
        name: Upload macos artifacts
        with:
          name: MacOS
          path: artifact-macos


  release_all:
    runs-on: ubuntu-latest
    needs: [build_windows, build_linux, build_macos]

    steps:

#          '/github/workspace/Windows/angular-electron-7.0.5-setup.exe.blockmap

      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        name: Download windows artifact
        with:
          name: Windows

      - uses: actions/download-artifact@v1
        with:
          name: Linux

      - uses: actions/download-artifact@v1
        with:
          name: MacOS

      #  For more information, see https://github.com/marketplace/actions/gh-Krelease
      - name: Release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRAFT_RELEASE: "false"
          PRE_RELEASE: "false"
          CHANGELOG_FILE: "CHANGELOG.md"
          ALLOW_EMPTY_CHANGELOG: "false"
          ALLOW_TAG_PREFIX: "true"
        with:
          args: |
            Windows/angular-electron-7.0.5-setup.exe.blockmap
            Windows/angular-electron-7.0.5-setup.exe
            MacOS/angular-electron-7.0.5-macos.pkg
            Linux/angular-electron-7.0.5-linux.deb
